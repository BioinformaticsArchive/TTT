//    This file is part of TTT Tissue Tracker.
//
//    TTT Tissue Tracker is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    TTT Tissue Tracker is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with TTT Tissue Tracker.  If not, see <http://www.gnu.org/licenses/>.


/*
 * PrimalGraphDrawer.h
 *
 *  Created on: Sep 24, 2013
 *      Author: morgan
 */

#ifndef PRIMALGRAPHDRAWER_H_
#define PRIMALGRAPHDRAWER_H_
#include <itkFixedArray.h>
#include <boost/tuple/tuple.hpp>
#include <boost/tuple/tuple_comparison.hpp>
#include "Drawer.h"
#include "giaaCellGraph2.h"
class PrimalGraphDrawer: public Drawer {
public:
	typedef itk::FixedArray<float,3> SpacingType;
protected:
	giaa::TissueDescriptor::Pointer m_Descriptor;
	SpacingType m_Spacing;

	typedef boost::tuple<giaa::SkeletonVertexType_lS, giaa::SkeletonVertexType_lS> SkeletonEdgeLsType;

	typedef std::map<vtkActor*, giaa::SkeletonVertexType_lS> Actor2SkeletonVertexLsType;
	Actor2SkeletonVertexLsType  m_Actor2SkeletonVertexLs;//vtkTogiaaVertex; // map from actor to svt in listS graph used for validation of primal


	typedef std::map<vtkActor*, SkeletonEdgeLsType > Actor2SkeletonEdgeLsType;

	Actor2SkeletonEdgeLsType m_Actor2SkeletonEdgeLs;// vtkTogiaaEdge;

	typedef std::map<vtkActor*, giaa::SkeletonVertexType> Actor2SkeletonVertexType;
	Actor2SkeletonVertexType m_Actor2SkeletonVertex; //actorTogiaavertex;// map for actor to svt in vecS graph used for Primal

	typedef boost::tuple<giaa::SkeletonVertexType, giaa::SkeletonVertexType> SkeletonEdgeType;
	typedef std::map<SkeletonEdgeType, vtkActor*> SkeletonEdge2ActorType;

	SkeletonEdge2ActorType m_SkeletonEdge2Actor;// svtToactor_edge;

	typedef std::map<giaa::SkeletonVertexType, vtkActor*> SkeletonVertex2ActorType;
	SkeletonVertex2ActorType m_SkeletonVertex2Actor;// giaaTovtkVertexToPrimal;

	typedef std::map<SkeletonEdgeLsType, vtkActor*> SkeletonEdgeLs2ActorType;
	SkeletonEdgeLs2ActorType m_SkeletonEdgeLs2Actor; //  giaaTovtkEdge;


public:
	PrimalGraphDrawer(){

	}
	inline void SetTissueDescriptor(const giaa::TissueDescriptor::Pointer & descriptor){
		m_Descriptor=descriptor;
	}
	inline void SetSpacing(const SpacingType & spacing ){
		m_Spacing=spacing;
	}
	virtual ~PrimalGraphDrawer(){

	}
	virtual void Draw();
};

#endif /* PRIMALGRAPHDRAWER_H_ */
